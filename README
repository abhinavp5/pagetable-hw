#Page Table HW

## Description
CSO2 page table hw to learn about page tables and virtual memory

##Table of Contents
-[Customization](#customization)
-[Limitations](#limitations)
-[Big-O Analysis](#bigO)

## Customization
LEVELS and POBITS are the 2 values that can be customized where LEVELS represent the number of LEVELS in the multi-levle page table look up and POBITS is the number offset bits.  2^(POBITS) is equivalent to the page size in kb. In the scenario where POBITS = 12 the page size would be 4096 KB. Increasing the number of offset bits would increase the page size and result in fewer PTEs needed to map the same amount of vm. Therefore more offset bits (larger pages) could lead to fewer page table lookups and lead to saving memory. Increasing the number of LEVELs results in more page table look up which is more computationally expensive. Similary increasing the number of POBITS. 
## Limitations
Currently there is no deallocation mechanism for freeing the allocated the memory allocated by posix_memalign.

The number of LEVELS ust be between 1-6 and the number of POBITS must be between 4-18.


## Big-O Analysis
The Time complexity would be O(n) as n (the number of LEVELS increases) the run time would linearly increase, however the space compexity would be O(2^n) because the number of offset are key in determining the page sizes where n would (POBITS*LEVELs)

## Acknowledgements
Thanks to the TA's for helping with catching an error that I couldn't catch
